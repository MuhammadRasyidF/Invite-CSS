@use "variables" as var;

$control-radius: 4px !default;

$control-border-width: 1px !default;

$control-height: 2.5em !default;
$control-line-height: 1.5 !default;

$control-padding-vertical: calc(0.5em - #{$control-border-width}) !default;
$control-padding-horizontal: calc(0.75em - #{$control-border-width}) !default;

$control-border-width: 1px !default;
$control-padding-horizontal: calc(0.75em - #{$control-border-width}) !default;

$textarea-padding: $control-padding-horizontal !default;
$textarea-max-height: 40em !default;
$textarea-min-height: 8em !default;
$textarea-colors: var.$colors !default;

$input-background-color: var.$scheme-main !default;
$input-border-color: #dbdbdb !default;
$input-radius: $control-radius !default;
$input-color: #363636 !default;
$input-placeholder-color: rgba($input-color, 0.3) !default;
$input-hover-border-color: #b5b5b5 !default;
$input-focus-border-color: #485fc7 !default;

$radius-rounded: 9999px !default;

@mixin control {
  -moz-appearance: none;
  -webkit-appearance: none;
  align-items: center;
  border: $control-border-width solid transparent;
  border-radius: $control-radius;
  box-shadow: none;
  display: inline-flex;
  font-size: 1rem;
  height: $control-height;
  justify-content: flex-start;
  line-height: $control-line-height;
  padding-bottom: $control-padding-vertical;
  padding-left: $control-padding-horizontal;
  padding-right: $control-padding-horizontal;
  padding-top: $control-padding-vertical;
  position: relative;
  vertical-align: top;
  // States
  &:focus,
  &.is-focused,
  &:active,
  &.is-active {
    outline: none;
  }
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
  }
}

@mixin input {
  @include control();
  background-color: $input-background-color;
  border-color: $input-border-color;
  border-radius: $input-radius;
  color: $input-color;
  + placeholder {
    color: $input-placeholder-color;
  }
  &:hover,
  &.is-hovered {
    border-color: $input-hover-border-color;
  }
  &:focus,
  &.is-focused,
  &:active,
  &.is-active {
    border-color: $input-focus-border-color;
    box-shadow: 0 0 0 0.125em rgba(#485fc7, 0.25);
  }
  &[disabled],
  fieldset[disabled] & {
    background-color: #ffffff;
    border-color: #ffffff;
    box-shadow: none;
    color: #7a7a7a;
    + placeholder {
      color: rgba(#7a7a7a, 0.3);
    }
  }
}

@mixin input-textarea {
  @include input();
  box-shadow: inset 0 0.0625em 0.125em rgba(#0a0a0a, 0.05);
  max-width: 100%;
  width: 100%;
  &[readonly] {
    box-shadow: none;
  }
  // Colors
  @each $name, $pair in $textarea-colors {
    $color: nth($pair, 1);
    &.is-#{$name} {
      border-color: $color;
      &:focus,
      &.is-focused,
      &:active,
      &.is-active {
        box-shadow: 0 0 0 0.125em rgba($color, 0.25);
      }
    }
  }
  // Modifiers
  &.is-fullwidth {
    display: block;
    width: 100%;
  }
  &.is-inline {
    display: inline;
    width: auto;
  }
}

.input {
  @include input-textarea();
  &.is-rounded {
    border-radius: $radius-rounded;
    padding-left: calc(#{$control-padding-horizontal} + 0.375em);
    padding-right: calc(#{$control-padding-horizontal} + 0.375em);
  }
  &.is-static {
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    padding-left: 0;
    padding-right: 0;
  }
}

.textarea {
  @include input-textarea();
  display: block;
  max-width: 100%;
  min-width: 100%;
  padding: $textarea-padding;
  resize: vertical;
  &:not([rows]) {
    max-height: $textarea-max-height;
    min-height: $textarea-min-height;
  }
  &[rows] {
    height: initial;
  }
  &.has-fixed-size {
    resize: none;
  }
}
